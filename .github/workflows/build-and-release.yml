name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mod-jar
        path: build/libs/*.jar
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: mod-jar
        path: ./artifacts
        
    - name: Get version from gradle.properties
      id: version
      run: |
        VERSION=$(grep '^modVersion=' gradle.properties | cut -d'=' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: SlashPing v${{ steps.version.outputs.version }}
        body: |
          ## SlashPing v${{ steps.version.outputs.version }}
          
          ### Installation
          1. Download the JAR file below
          2. Place it in your `mods` folder
          3. Launch Minecraft with Forge 1.8.9
          
          ### Usage
          - `/ping` - Check your own ping
          - `/ping <player>` - Check another player's ping
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/slashping-1.0.jar
        asset_name: slashping-v${{ steps.version.outputs.version }}.jar
        asset_content_type: application/java-archive